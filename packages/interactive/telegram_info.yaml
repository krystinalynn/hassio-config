########################################################
#                                                      #
# This package contains automations that respond to    #
# interactive commands with system/general information #
#                                                      #
# DEPENDS ON: Notifications                            #
#                                                      #
########################################################


automation:
  - alias: Telegram - Reply with Status
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/status'
    action:
      service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "System is online!


          Last system reboot was on {{ states('sensor.last_boot') }}.


          Locations are showing as -

          {% for state in states.device_tracker %}
            {{- state.name }} - {{ state.state_with_unit }}

          {%- endfor %-}

          Guest mode is {{ states('input_boolean.guest_mode') }}
          Away mode is {{ states('input_boolean.away_mode') }}
          Holiday mode is {{ states('input_boolean.holiday_mode') }}."
        keyboard: ["/occupancy", "/menu"]

  - alias: Telegram - Reply with Climate
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/climate'
    action:
      service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: >-
          "Hallway temperature is: {{- states('sensor.hallway_thermostat_temperature') }}
          Operation mode is: {{- states('sensor.hallway_thermostat_operation_mode') }}
          Humidity is: {{ states('sensor.hallway_thermostat_humidity') }}
          Climate away mode: {{ states('binary_sensor.wildown_gardens_away') }}"

  - alias: Telegram - Reply with Occupancy
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/occupancy'
    action:
      service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "Locations are showing as -

          {% for state in states.device_tracker %}
            {{- state.name }} - {{ state.state_with_unit }}

          {% endfor %}

          Guest mode is {{ states('input_boolean.guest_mode') }}."
        keyboard: ["/away, /holiday, /guest", "/menu"]

  - alias: Telegram - Reply with Menu
    initial_state: on
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/menu'
    action:
      service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        message: "Commands..."
        keyboard: ["/occupancy", "/status", "/away", "/maintenance", "/climate"]
