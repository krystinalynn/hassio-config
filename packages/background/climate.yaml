####################################################
#                                                  #
# This package automates the Nest HVAC controls    #
#                                                  #
# Automates:                                       #
#   - away mode on house empty                     #
#   - eco mode when warm weather                   #
#   - day/night temperature setpoints              #
# DEPENDS ON Occupancy & Environment               #
#                                                  #
####################################################

homeassistant:

nest:
  client_id: !secret nest_clientid
  client_secret: !secret nest_clientsecret

climate:
  platform: nest

sensor:
  - platform: mqtt
    name: Hallway Temperature
    state_topic: smartthings/Hallway Motion Sensor/temperature/state
    device_class: temperature

input_text:
  last_nest_mode:
    name: Last Nest Mode
    min: 0
    max: 4
    pattern: '^eco$|^heat$|^off$'

input_boolean:
  climate_hold:
    name: Climate hold

input_number:
  outside_temp_offset:
    name: Outside Temperature Offset
    min: 0
    max: 10
    step: 1
    unit_of_measurement: °C

  daytime_heat_setpoint:
    name: Daytime Heat Setpoint
    min: 0
    max: 32
    step: 0.5
    unit_of_measurement: °C

  nighttime_heat_setpoint:
    name: Nighttime Heat Setpoint
    min: 0
    max: 32
    step: 0.5
    unit_of_measurement: °C

binary_sensor:
  - platform: template
    sensors:
      warmer_than_current_setpoint:
        friendly_name: Outside warmer than current setpoint
        entity_id:
          - sensor.met_office_temperature
          - input_number.outside_temp_offset
          - sensor.hallway_thermostat_target
        value_template: >-
          {{ state_attr('weather.met_office_bournemouth_southbourne_beach','temperature') | float
            + (states.input_number.outside_temp_offset.state | int)
            >= states.sensor.hallway_thermostat_target.state | float }}
      warmer_than_day_setpoint:
        friendly_name: Outside warmer than daytime 
        entity_id:
          - sensor.met_office_temperature
          - input_number.outside_temp_offset
          - input_number.daytime_heat_setpoint
        value_template: >-
          {{ state_attr('weather.met_office_bournemouth_southbourne_beach','temperature') | float
            + (states.input_number.outside_temp_offset.state | int)
            >= states.input_number.daytime_heat_setpoint.state | float }}
      warmer_than_night_setpoint:
        friendly_name: Outside warmer than nighttime setpoint
        entity_id:
          - sensor.met_office_temperature
          - input_number.outside_temp_offset
          - input_number.nighttime_heat_setpoint
        value_template: >-
          {{ state_attr('weather.met_office_bournemouth_southbourne_beach','temperature') | float
            + (states.input_number.outside_temp_offset.state | int)
            >= states.input_number.nighttime_heat_setpoint.state | float }}

automation:
  - alias: Climate - Update temperature on bedtime mode on
    initial_state: on
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ (states.climate.hallway.attributes.operation_mode != 'off') }}"
        - condition: state
          entity_id: 'binary_sensor.wildown_gardens_away'
          state: 'off'
        - condition: template
          value_template: >-
            {{- not (
            ((states.binary_sensor.warmer_than_night_setpoint.state == 'on')
              and
            (states.climate.hallway.attributes.operation_mode == 'eco'))) -}}
    trigger:
      - platform: state
        entity_id: input_boolean.bedtime_mode
        from: 'off'
        to: 'on'
    action:
      - service: climate.set_operation_mode
        data_template:
          entity_id: climate.hallway
          operation_mode: >-
            {%- if (states.binary_sensor.warmer_than_night_setpoint.state == 'on') -%}
              eco
            {%- elif ((states.binary_sensor.warmer_than_night_setpoint.state == 'off')) -%}
              heat
            {%- else -%}
              {{- states.sensor.hallway_thermostat_operation_mode.state -}}
            {%- endif -%}
      - delay: '00:00:10'
      - condition: state
        entity_id: 'sensor.hallway_thermostat_operation_mode'
        state: 'heat'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.nighttime_heat_setpoint.state | float }}'

  - alias: Climate - Update temperature on bedtime mode off
    initial_state: on
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ (states.climate.hallway.attributes.operation_mode != 'off') }}"
        - condition: state
          entity_id: 'binary_sensor.wildown_gardens_away'
          state: 'off'
        - condition: template
          value_template: >-
            {{- not (
            ((states.binary_sensor.warmer_than_day_setpoint.state == 'on')
              and
            (states.climate.hallway.attributes.operation_mode == 'eco'))) -}}
    trigger:
      - platform: state
        entity_id: input_boolean.bedtime_mode
        from: 'on'
        to: 'off'
    action:
      - service: climate.set_operation_mode
        data_template:
          entity_id: climate.hallway
          operation_mode: >-
            {%- if (states.binary_sensor.warmer_than_day_setpoint.state == 'on') -%}
              eco
            {%- elif (states.binary_sensor.warmer_than_day_setpoint.state == 'off') -%}
              heat
            {%- else -%}
              {{- states.sensor.hallway_thermostat_operation_mode.state -}}
            {%- endif -%}
      - delay: '00:00:10'
      - condition: state
        entity_id: 'sensor.hallway_thermostat_operation_mode'
        state: 'heat'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.daytime_heat_setpoint.state | float }}'

  - alias: Climate - update Nest on daytime heat setpoint change
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_number.daytime_heat_setpoint
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'off'
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'heat'
    action:
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.daytime_heat_setpoint.state | float }}'

  - alias: Climate - update Nest on nighttime heat setpoint change
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_number.nighttime_heat_setpoint
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'on'
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'heat'
    action:
      - service: homeassistant.turn_off
        data:
          entity_id: automation.climate_update_nest_on_nighttime_heat_setpoint_change
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.nighttime_heat_setpoint.state | float }}'

  - alias: Climate - Away mode on
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
        to: 'on'
        for:
          minutes: 5
    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.hallway
          away_mode: true

  - alias: Climate - Away mode off
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
        to: 'off'
    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.hallway
          away_mode: false

  - alias: Climate - Update last known Nest mode
    initial_state: off
    trigger:
      - platform: state
        entity_id: sensor.hallway_thermostat_operation_mode
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.last_nest_mode
          value: '{{ states.sensor.hallway_thermostat_operation_mode.state }}'
  
  - alias: Climate - Initialise Nest on HA start
    initial_state: on
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: '00:00:15'
      - service: climate.set_operation_mode
        data_template:
          entity_id: climate.hallway
          operation_mode: '{{ states.input_text.last_nest_mode.state }}'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: >-
            {%- if (states.input_boolean.bedtime_mode.state == 'on') -%}
              {{ states.input_number.nighttime_heat_setpoint.state | float }}
            {%- else -%}
              {{ states.input_number.daytime_heat_setpoint.state | float }}
            {%- endif -%}
      - delay: '00:00:15'
      - service: automation.turn_on
        data:
          entity_id: automation.climate_update_last_known_nest_mode
      - service: automation.trigger
        data:
          entity_id: automation.climate_update_last_known_nest_mode
      - service: automation.turn_on
        data:
          entity_id: automation.climate_set_mode_to_heat_and_set_temp_when_daytime_setpoint_breaches_offset_temp
      - service: automation.turn_on
        data:
          entity_id: automation.climate_set_mode_to_heat_and_set_temp_when_nighttime_setpoint_breaches_offset_temp
      - service: automation.turn_on
        data:
          entity_id: automation.climate_set_mode_to_eco_when_daytime_setpoint_within_offset_temp
      - service: automation.turn_on
        data:
          entity_id: automation.climate_set_mode_to_eco_when_nighttime_setpoint_within_offset_temp
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'      
      - service: automation.trigger
        data_template:
          entity_id: >-
            {%- if (
            (states.input_boolean.bedtime_mode.state == 'off')
              and
            (states.binary_sensor.warmer_than_day_setpoint.state == 'on')) -%}
              automation.climate_set_mode_to_eco_when_daytime_setpoint_within_offset_temp
            {%- elif (
            (states.input_boolean.bedtime_mode.state == 'off')
              and
            (states.binary_sensor.warmer_than_day_setpoint.state == 'off')) -%}
              automation.climate_set_mode_to_heat_and_set_temp_when_daytime_setpoint_breaches_offset_temp
            {%- elif (
            (states.input_boolean.bedtime_mode.state == 'on')
              and
            (states.binary_sensor.warmer_than_night_setpoint.state == 'on')) -%}
              automation.climate_set_mode_to_eco_when_nighttime_setpoint_within_offset_temp
            {%- elif (
            (states.input_boolean.bedtime_mode.state == 'on')
              and
            (states.binary_sensor.warmer_than_night_setpoint.state == 'off')) -%}
              automation.climate_set_mode_to_heat_and_set_temp_when_nighttime_setpoint_breaches_offset_temp
            {%- endif -%}      
      - service: automation.turn_on
        data:
          entity_id: automation.climate_ensure_away_and_eco_set_when_unoccupied

  - alias: Climate - Set mode to heat and set temp when daytime setpoint breaches offset temp
    initial_state: off
    trigger:
      - platform: state
        entity_id: binary_sensor.warmer_than_day_setpoint
        to: 'off'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'eco'
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'off'
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.hallway
          operation_mode: 'heat'
      - delay: '00:00:10'
      - condition: state
        entity_id: 'sensor.hallway_thermostat_operation_mode'
        state: 'heat'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.daytime_heat_setpoint.state | float }}'

  - alias: Climate - Set mode to heat and set temp when nighttime setpoint breaches offset temp
    initial_state: off
    trigger:
      - platform: state
        entity_id: binary_sensor.warmer_than_night_setpoint
        to: 'off'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'eco'
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'on'
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.hallway
          operation_mode: 'heat'
      - delay: '00:00:10'
      - condition: state
        entity_id: 'sensor.hallway_thermostat_operation_mode'
        state: 'heat'
      - service: climate.set_temperature
        data_template:
          entity_id: climate.hallway
          temperature: '{{ states.input_number.nighttime_heat_setpoint.state | float }}'

  - alias: Climate - Set mode to eco when daytime setpoint within offset temp
    initial_state: off
    trigger:
      - platform: state
        entity_id: binary_sensor.warmer_than_day_setpoint
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'heat'
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'off'
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.hallway
          operation_mode: 'eco'

  - alias: Climate - Set mode to eco when nighttime setpoint within offset temp
    initial_state: off
    trigger:
      - platform: state
        entity_id: binary_sensor.warmer_than_night_setpoint
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'sensor.hallway_thermostat_operation_mode'
          state: 'heat'
        - condition: state
          entity_id: 'input_boolean.bedtime_mode'
          state: 'on'
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.hallway
          operation_mode: 'eco'

  - alias: Climate - Ensure away and eco set when unoccupied
    initial_state: off
    trigger:
      - platform: state
        entity_id: sensor.hallway_thermostat_operation_mode
        to: 'heat'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: 'input_boolean.away_mode'
          state: 'on'
        - condition: state
          entity_id: 'input_boolean.holiday_mode'
          state: 'on'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.hallway
          operation_mode: 'eco'
      - delay: '00:00:15'
      - service: climate.set_away_mode
        data:
          entity_id: climate.hallway
          away_mode: true